DELETE FROM INT_ECR_RMRK_ADDRESS_MASTER WHERE (APPL_ID,ADDR_TYP_CDE,APPLICANT_TYP_CDE) IN (SELECT V_ECR_APPL_ID,V_ADDR_TYPE,V_APPLICANT_TYPE FROM DRI_ECR_RMRKBL_ADDR_DTL_D WHERE CAST(SUBSTR(MIS_DATE (FORMAT 'YYYY-MM-DD'),1,10) AS VARCHAR(10)) = '2016-10-31');
INSERT INTO INT_ECR_RMRK_ADDRESS_MASTER ( APPL_ID, APPLICANT_TYP_CDE, ADDR_TYP_CDE, ADDR_LINE_1_TXT, ADDR_LINE_2_TXT, ADDR_LINE_3_TXT, ADDR_LINE_4_TXT, CITY_NM_TXT, DISTRICT_NM_TXT, STATE_NM_TXT, CNTRY_NM_TXT, ZIP_CDE, FLR_NBR, BLK_NBR, UNIT_NBR, BLDG_NBR, ESTATE_NM_TXT, STREET_NM_TXT, STREET_NBR, STREET_TYP_DESC, CREATED_DT_TIME, UPDATED_DT_TIME, ADDR_LINE_5_TXT, ADDR_LINE_6_TXT, BIZ_ORG_CDE, CNTRY_CDE, SRC_SYS_ID, MIS_DT, LOAD_DT_TIME, YRS_AT_CURR_ADDR_NBR, MTHS_AT_CURR_ADDR_NBR ) SELECT V_ECR_APPL_ID, V_APPLICANT_TYPE, V_ADDR_TYPE, V_ADDR_LINE1, V_ADDR_LINE2, V_ADDR_LINE3, V_ADDR_LINE4, V_CITY, V_DISTRICT, V_STATE, V_COUNTRY, V_ZIPCODE, V_FLOOR, V_BLOCK, V_UNIT_NBR, V_BUILDING, V_ESTATE_NAME, V_STREET_NAME, V_STREET_NBR, V_STREET_TYPE, D_CREATED_DATE, D_UPDATED_DATE, V_ADDR_LINE5, V_ADDR_LINE6, CAST( 'GCG' AS CHAR(3)) BIZ_ORG_CDE , CAST( '458' AS CHAR(3)) CNTRY_CDE , CAST( 'CI' AS VARCHAR(15) ) SRC_SYS_ID , MIS_DATE MIS_DT, CAST( CURRENT_TIMESTAMP AS TIMESTAMP(6) ) LOAD_DT_TIME, N_YEARS_AT_CURRENT_ADDR, N_MONTHS_AT_CURRENT_ADDR FROM DRI_ECR_RMRKBL_ADDR_DTL_D WHERE CAST(SUBSTR(MIS_DATE (FORMAT 'YYYY-MM-DD'),1,10) AS VARCHAR(10)) = '2016-10-31';
CREATE MULTISET VOLATILE TABLE DLY_METRICS_BASE_IND_MY AS ( SELECT CUST_BASE.CLNT_NBR, CUST_BASE.ACCT_NBR, CUST_BASE.SRC_SYS_ID, CUST_BASE.PRD_CDE, ACCT_LOAN_DISB_LCYAMT,ACCT_EOP_BAL_LCYAMT,ACCT_NBR_FROM_SRC, CASE WHEN SRC_SYS_ID= 'ECS' AND SUBSTR(PRD_CDE,1,3) IN ('747','749') THEN 1 ELSE 0 END AS CRD_IND, /* CARDS INDICATOR */ CASE WHEN SRC_SYS_ID='IPP' THEN 1 ELSE 0 END AS INS_IND, /*INSURANCE INDICATOR */ CASE WHEN (SRC_SYS_ID IN ('MF','SB') AND PRD_HRCHY_LVL_9_DESC IN ('MUTUAL FUND', 'RETAIL BOND', 'MARKET LINKED DEPOSIT') ) OR (SRC_SYS_ID IN ('IMPMAST') AND PRD_HRCHY_LVL_9_DESC IN ('MTA') ) THEN 1 ELSE 0 END AS INV_IND, /*INVESTMENT INDICATOR*/ CASE WHEN SRC_SYS_ID IN ('ALS') AND PRD_HRCHY_LVL_9_DESC NOT IN ('CHECKING OD','MTA','UBOD','PDO','PDO CONVERSION') THEN 1 ELSE 0 END AS MORT_IND, /*MORTGAGE INDICATOR*/ /*UNSECURED LOANS INDICATOR*/ CASE WHEN SRC_SYS_ID='ECS' AND SUBSTR(PRD_CDE,1,3) IN ('751')THEN 1 ELSE 0 END AS RC_IND_03, /* UNSECURED LOANS - READY_CUSTOMCREDIT_03 */ CASE WHEN SRC_SYS_ID='ECS' AND PRD_CDE IN ('060400')THEN 1 ELSE 0 END AS PIL_IND_04, /* => NEW CHANGE - PERSONALLOANS_04 */ -----CASE WHEN SRC_SYS_ID='ECS' AND SUBSTR(PRD_CDE,1,3) IN ('060')THEN 1 ELSE 0 END AS PIL_IND_04, /* UNSECURED LOANS - PERSONALLOANS_04 */ CASE WHEN SRC_SYS_ID = 'IMPMAST' AND PRD_CDE = 'UBOD' THEN 1 ELSE 0 END AS OVERDRAFT_18, /* UNSECURED LOANS - OVERDRAFT_18 */ CASE WHEN ( SRC_SYS_ID = 'ALS' AND PRD_HRCHY_LVL_9_DESC IN ('UBOD','PDO','PDO CONVERSION') ) OR ( SRC_SYS_ID = 'ECS' AND SUBSTR(PRD_CDE,1,3) IN ('060') AND SUBSTR(PRD_CDE,4,6) <> ('400') ) THEN 1 ELSE 0 END AS OTH_UNSEC_IND_08, /* => NEW CHANGE - OTH_UNSEC_IND_08 */ -----CASE WHEN SRC_SYS_ID = 'ALS' AND PRD_HRCHY_LVL_9_DESC IN ('UBOD','PDO','PDO CONVERSION') THEN 1 ELSE 0 END AS OTH_UNSEC_IND_08, /* UNSECURED LOANS - OTH_UNSEC_IND_08 */ CASE WHEN RC_IND_03=1 OR PIL_IND_04=1 OR OVERDRAFT_18=1 OR OTH_UNSEC_IND_08=1 THEN 1 ELSE 0 END AS UNSEC_IND, CASE WHEN CRD_IND=0 AND MORT_IND=0 THEN 1 ELSE 0 END AS RTL_IND FROM ( SELECT TOT.CLNT_NBR, ACCT_NBR, SRC_SYS_ID, PRD_CDE, ACCT_LOAN_DISB_LCYAMT,ACCT_EOP_BAL_LCYAMT,ACCT_NBR_FROM_SRC FROM ( SELECT DISTINCT B.CLNT_NBR, ACCT_NBR, SRC_SYS_ID, PRD_CDE, ACCT_LOAN_DISB_LCYAMT,ACCT_EOP_BAL_LCYAMT,ACCT_NBR_FROM_SRC FROM INT_ACCT_SNAPSHOT_D B WHERE B.ACCT_STAT_CDE IN ('01','1') AND B.MIS_DT= '2016-11-01' AND ( (B.SRC_SYS_ID IN ('MF', 'SB','RCPLUS','ALS') AND B.ACCT_EOP_BAL_LCYAMT <>0) OR B.SRC_SYS_ID NOT IN ('MF', 'SB','RCPLUS','ALS') ) AND NOT (SRC_SYS_ID IN ('ALS','IPP') ) AND NOT (SRC_SYS_ID='ECS' AND SUBSTR(PRD_CDE,1,3) IN ('747','749', '751') ) UNION ALL /* AST ACCOUNTS */ SELECT CLNT_NBR, ACCT_NBR, SRC_SYS_ID, PRD_CDE, 0 ACCT_LOAN_DISB_LCYAMT, 0 AS ACCT_EOP_BAL_LCYAMT, ACCT_NBR AS ACCT_NBR_FROM_SRC FROM INT_AST_SNAPSHOT_D WHERE MIS_DT= '2016-11-01' AND ACCT_STAT_CDE IN ('AC') AND TOT_PRIN_BAL_ACYAMT <>0 UNION ALL /* RC AND CARD ACCOUNTS */ SELECT DISTINCT ACC.CLNT_NBR, ACC.ACCT_NBR, ACC.SRC_SYS_ID, ACC.PRD_CDE, ACC.ACCT_LOAN_DISB_LCYAMT, ACC.ACCT_EOP_BAL_LCYAMT, ACC.ACCT_NBR_FROM_SRC FROM (SELECT * FROM INT_ACCT_SNAPSHOT_D WHERE MIS_DT= '2016-11-01' AND (SRC_SYS_ID='ECS' AND SUBSTR(PRD_CDE,1,3) IN ('747','749', '751') ) ) ACC JOIN INT_CRD_PORTFOLIO_SNAPSHOT_D CPS ON (ACC.ACCT_NBR=CPS.CRD_ACCT_NBR) WHERE CPS.MIS_DT= '2016-11-01' AND CPS.ACCT_ORG_CDE IN ('747','749','751') AND CPS.ACCT_PRIM_BLK_CDE NOT IN ('A','B','E','F','L','Q','U','W','Z') AND CPS.ACCT_INTRNL_STAT_CDE IN ('A','D') UNION ALL /*INSRUANCE ACCOUNTS */ SELECT CLNT_NBR, POL_NBR AS ACCT_NBR, 'IPP' AS SRC_SYS_ID, PRD_CDE, 0 ACCT_LOAN_DISB_LCYAMT, POL_TOT_PREM_LCYAMT AS ACCT_EOP_BAL_LCYAMT, ACCT_NBR AS ACCT_NBR_FROM_SRC FROM INT_INS_POLICY_MASTER WHERE POL_STAT = 'IN-FORCE' AND POL_STAT_EFF_DT <= '2016-11-01' /*AND POL_TOT_PREM_LCYAMT <> 0 */ )TOT JOIN (SELECT CLNT_NBR FROM INT_CLIENT_SNAPSHOT_D WHERE MIS_DT = '2016-11-01' AND CLNT_PRIM_SEC_IND='P' AND BIZ_ORG_CDE IN ('GCG')) CLNT ON TOT.CLNT_NBR=CLNT.CLNT_NBR ) CUST_BASE LEFT JOIN (SELECT PRD_CDE AS HRCY_PRD_CDE, PRD_HRCHY_LVL_9_DESC FROM INT_PROD_HIERARCHY_SNAPSHOT_D QUALIFY ROW_NUMBER() OVER (PARTITION BY PRD_CDE ORDER BY MIS_DT DESC )=1 ) HRCH ON (CUST_BASE.PRD_CDE=HRCH.HRCY_PRD_CDE) ) WITH DATA NO PRIMARY INDEX ON COMMIT PRESERVE ROWS ;
LOCK ROW FOR ACCESS SELECT A.CLNT_NBR AS CLNT_NBR, CASE WHEN COALESCE(A.CLNT_DWH_SEG_CDE,'') = 'CTB' THEN (CASE WHEN ZEROIFNULL(MY.INV_BAL_LCYAMT) < 25000 THEN 'MB' WHEN ZEROIFNULL(MY.INV_BAL_LCYAMT) < 50000 THEN (CASE WHEN ZEROIFNULL(MY.CLNT_TOT_AST_LMT) >= 125000 THEN 'TB' ELSE 'MB' END) WHEN ZEROIFNULL(MY.INV_BAL_LCYAMT) < 100000 THEN (CASE WHEN ZEROIFNULL(MY.CLNT_TOT_AST_LMT) >= 250000 THEN 'GTB' ELSE 'TB' END) WHEN ZEROIFNULL(MY.INV_BAL_LCYAMT) >= 100000 THEN 'GTB' ELSE NULL END) WHEN COALESCE(A.CLNT_DWH_SEG_CDE,'')='CTG' THEN ( CASE WHEN ZEROIFNULL(MY.INV_BAL_LCYAMT)<100000 THEN 'G0' WHEN ZEROIFNULL( MY.INV_BAL_LCYAMT)<200000 THEN (CASE WHEN ZEROIFNULL(MY.CLNT_TOT_AST_LMT)>= 500000 THEN 'G1' ELSE 'G0' END) WHEN ZEROIFNULL(MY.INV_BAL_LCYAMT)<1000000 THEN 'G1' WHEN ZEROIFNULL(MY.INV_BAL_LCYAMT)<2000000 THEN 'G2' WHEN ZEROIFNULL(MY.INV_BAL_LCYAMT)>=2000000 THEN 'G3' ELSE NULL END) ELSE NULL END AS MY_CLNT_DWH_SUB_SEG_CDE, CASE WHEN COALESCE(CLNT_DWH_SEG_CDE,'') = 'CTB' THEN (CASE WHEN ID1.TOTAL >= 500000000 THEN 'B4' WHEN ( ID1.TOTAL >= 200000000 AND ID1.TOTAL < 499999999.999999) THEN 'B3' WHEN ( ID1.TOTAL >= 50000000 AND ID1.TOTAL < 199999999.999999) THEN 'B2' WHEN ( ID1.TOTAL >= 0.000000001 AND ID1.TOTAL < 49999999.999999) THEN 'B1' WHEN ID1.TOTAL<=0 THEN 'B0' ELSE 'B0' END) WHEN COALESCE(CLNT_DWH_SEG_CDE,'') IN ('CTG','TCG','ZXG','SKG','BRU') THEN ( CASE WHEN ID2.TOTAL2>= 2000000000 THEN 'G3' WHEN ( ID2.TOTAL2>= 1000000000 AND ID2.TOTAL2 < 1999999999.999990) THEN 'G2' WHEN ( ID2.TOTAL2>= 500000000 AND ID2.TOTAL2 < 999999999.999999) THEN 'G1' WHEN ( ID2.TOTAL2>= 0 AND ID2.TOTAL2 <= 499999999.999999) THEN 'G0' ELSE 'G0' END) ELSE NULL END AS ID_CLNT_DWH_SUB_SEG_CDE, CASE WHEN COALESCE(CLNT_DWH_SEG_CDE,'') = 'CTB' THEN (CASE WHEN PH.TOTAL >= 4000000 THEN 'B3' WHEN (PH.TOTAL >= 2000000 AND PH.TOTAL < 4000000) THEN 'B2' WHEN (PH.TOTAL >= 500000 AND PH.TOTAL < 2000000) THEN 'B1' WHEN PH.TOTAL <500000 THEN 'B0' ELSE 'B0' END) WHEN COALESCE(CLNT_DWH_SEG_CDE,'')='CTG' THEN ( CASE WHEN PH.TOTAL> 4000000 THEN 'G3' WHEN (PH.TOTAL<= 4000000 AND PH.TOTAL > 25000000) THEN 'G2' WHEN (PH.TOTAL<= 25000000 AND PH.TOTAL > 50000000) THEN 'G1' WHEN PH.TOTAL<= 50000000 THEN 'G0' ELSE 'G0' END) ELSE NULL END AS PH_CLNT_DWH_SUB_SEG_CDE, CASE WHEN COALESCE(CLNT_DWH_SEG_CDE,'') IN ('CTB','TCB','SKB','ZXB') THEN (CASE WHEN SG1.TOTAL >= 200000 THEN 'B5' WHEN (SG1.TOTAL >= 150000 AND SG1.TOTAL < 200000) THEN 'B4' WHEN (SG1.TOTAL >= 100000 AND SG1.TOTAL < 150000) THEN 'B3' WHEN (SG1.TOTAL >= 20000 AND SG1.TOTAL < 100000) THEN 'B2' WHEN (SG1.TOTAL >= 5000 AND SG1.TOTAL < 20000) THEN 'B1' WHEN SG1.TOTAL<5000 THEN 'B0' ELSE 'B0' END) WHEN COALESCE(CLNT_DWH_SEG_CDE,'') IN ('CTG','TCG','ZXG','SKG','BRU') THEN ( CASE WHEN SG2.TOTAL2>= 1000000 THEN 'G3' WHEN (SG2.TOTAL2>= 500000 AND SG2.TOTAL2 < 1000000) THEN 'G2' WHEN (SG2.TOTAL2>= 200000 AND SG2.TOTAL2 < 500000) THEN 'G1' WHEN (SG2.TOTAL2>= 0 AND SG2.TOTAL2 < 200000) THEN 'G0' ELSE 'G0' END) ELSE NULL END AS SG_CLNT_DWH_SUB_SEG_CDE FROM INT_CLIENT_MASTER A /*MALAYSIA*/ LEFT OUTER JOIN ( SELECT CLNT_NBR,SUM(CASE WHEN COALESCE(A.ACCT_STAT_CDE,'')='01' AND COALESCE(B.PRD_HRCHY_LVL_1_CDE,'')='A' THEN ACCT_EOP_BAL_LCYAMT ELSE 0 END) AS CLNT_TOT_AST_LMT, SUM(CASE WHEN COALESCE(A.ACCT_STAT_CDE,'')='01' AND COALESCE(B.PRD_HRCHY_LVL_2_CDE,'') IN ('IN','IV','DP' ,'CS') THEN ACCT_EOP_BAL_LCYAMT ELSE 0 END) AS INV_BAL_LCYAMT FROM INT_ACCT_SNAPSHOT_D A LEFT OUTER JOIN (SELECT * FROM INT_PROD_HIERARCHY_SNAPSHOT_D WHERE (PRD_CDE ,MIS_DT, PRD_DWH_ID) IN (SELECT DISTINCT PRD_CDE,MAX(MIS_DT) AS MIS_DT,MAX(PRD_DWH_ID) AS PRD_DWH_ID FROM INT_PROD_HIERARCHY_SNAPSHOT_D GROUP BY PRD_CDE)) B ON A.PRD_CDE=B.PRD_CDE WHERE A.MIS_DT = CAST('20161101' AS DATE FORMAT 'YYYYMMDD') GROUP BY A.CLNT_NBR ) MY ON A.CLNT_NBR = MY.CLNT_NBR /*INDONESIA*/ LEFT OUTER JOIN ( SELECT CLNT_NBR, SUM((CASE WHEN ACCT_STAT_CDE='01' AND (PRD_HRCHY_LVL_1_CDE)='L' AND (ACCT_EOP_BAL_LCYAMT) >0 THEN ACCT_EOP_BAL_LCYAMT ELSE 0 END) + (CASE WHEN ACCT_STAT_CDE='01' AND (PRD_HRCHY_LVL_1_CDE)='A' AND (ACCT_EOP_BAL_LCYAMT)<0 THEN -(ACCT_EOP_BAL_LCYAMT) ELSE 0 END ) ) AS TOTAL FROM INT_ACCT_SNAPSHOT_D A LEFT OUTER JOIN (SELECT * FROM INT_PROD_HIERARCHY_SNAPSHOT_D WHERE (PRD_CDE ,MIS_DT, PRD_DWH_ID) IN (SELECT DISTINCT PRD_CDE,MAX(MIS_DT) AS MIS_DT,MAX(PRD_DWH_ID) AS PRD_DWH_ID FROM INT_PROD_HIERARCHY_SNAPSHOT_D GROUP BY PRD_CDE)) B ON A.PRD_CDE= B.PRD_CDE WHERE A.MIS_DT = CAST('20161101' AS DATE FORMAT 'YYYYMMDD') GROUP BY A.CLNT_NBR ) ID1 ON A.CLNT_NBR = ID1.CLNT_NBR LEFT OUTER JOIN ( SELECT CLNT_NBR, CASE WHEN A.CLNT_DWH_SEG_CDE IN ('CTG','TCG','ZXG','SKG','BRU') THEN ZEROIFNULL(C.N_TOT_TRB_BASE) ELSE 0 END AS TOTAL2 FROM INT_CLIENT_MASTER A LEFT OUTER JOIN (SELECT * FROM DRI_TRB_MAST_D WHERE MIS_DATE = CAST('20161101' AS DATE FORMAT 'YYYYMMDD') )C ON SUBSTR(TRIM(C.V_CUST_NUMB),2,9)= A.CLNT_NBR )ID2 ON A.CLNT_NBR = ID2.CLNT_NBR /* PHILLIPINES*/ LEFT OUTER JOIN ( SELECT SUM(A.ACCT_EOP_BAL_LCYAMT+A.ACCT_AVG_BAL_LCYAMT) AS TOTAL, A.CLNT_NBR FROM INT_ACCT_SNAPSHOT_D A LEFT OUTER JOIN (SELECT * FROM INT_PROD_HIERARCHY_SNAPSHOT_D WHERE (PRD_CDE ,MIS_DT, PRD_DWH_ID) IN (SELECT DISTINCT PRD_CDE,MAX(MIS_DT) AS MIS_DT,MAX(PRD_DWH_ID) AS PRD_DWH_ID FROM INT_PROD_HIERARCHY_SNAPSHOT_D GROUP BY PRD_CDE)) B ON A.PRD_CDE = B.PRD_CDE AND B.PRD_HRCHY_LVL_1_CDE IN ('I','L') WHERE A.MIS_DT = CAST('20161101' AS DATE FORMAT 'YYYYMMDD') AND A.ACCT_STAT_CDE = '01' GROUP BY A.CLNT_NBR ) PH ON A.CLNT_NBR = PH.CLNT_NBR /*SINGAPORE*/ LEFT OUTER JOIN ( SELECT CLNT_NBR, SUM((CASE WHEN ACCT_STAT_CDE='01' AND PRD_HRCHY_LVL_1_CDE='L' AND ACCT_EOP_BAL_LCYAMT >0 THEN ACCT_EOP_BAL_LCYAMT ELSE 0 END) + (CASE WHEN ACCT_STAT_CDE='01' AND PRD_HRCHY_LVL_1_CDE='A' AND ACCT_EOP_BAL_LCYAMT<0 THEN -(ACCT_EOP_BAL_LCYAMT) ELSE 0 END) ) AS TOTAL FROM INT_ACCT_SNAPSHOT_D A LEFT OUTER JOIN (SELECT * FROM INT_PROD_HIERARCHY_SNAPSHOT_D WHERE (PRD_CDE ,MIS_DT, PRD_DWH_ID) IN (SELECT DISTINCT PRD_CDE,MAX(MIS_DT) AS MIS_DT,MAX(PRD_DWH_ID) AS PRD_DWH_ID FROM INT_PROD_HIERARCHY_SNAPSHOT_D GROUP BY PRD_CDE)) B ON A.PRD_CDE= B.PRD_CDE WHERE A.MIS_DT = CAST('20161101' AS DATE FORMAT 'YYYYMMDD') GROUP BY A.CLNT_NBR ) SG1 ON A.CLNT_NBR = SG1.CLNT_NBR LEFT OUTER JOIN ( SELECT CLNT_NBR, CASE WHEN A.CLNT_DWH_SEG_CDE IN ('CTG','TCG','ZXG','SKG','BRU') THEN ZEROIFNULL(C.N_TOT_TRB_BASE) ELSE 0 END AS TOTAL2 FROM INT_CLIENT_MASTER A LEFT OUTER JOIN (SELECT * FROM DRI_TRB_MAST_D WHERE MIS_DATE = CAST('20161101' AS DATE FORMAT 'YYYYMMDD') )C ON SUBSTR(TRIM(C.V_CUST_NUMB),2,9)= A.CLNT_NBR ) SG2 ON A.CLNT_NBR = SG2.CLNT_NBR;
LOCK ROW FOR ACCESS SELECT ACCT_NBR, CLNT_DWH_ID, ACCT_DWH_ID, SRC_SYS_ID, ACCT_STAT_CDE, ACCT_EOP_BAL_LCYAMT, ACCT_EOP_BAL_USDAMT, PRD_CDE, MIS_DT,CLNT_NBR FROM INT_ACCT_SNAPSHOT_D WHERE MIS_DT = CAST('20161103' AS DATE FORMAT 'YYYYMMDD');
LOCK ROW FOR ACCESS SELECT ACCT_NBR, CLNT_DWH_ID, ACCT_DWH_ID, SRC_SYS_ID, ACCT_STAT_CDE, ACCT_EOP_BAL_LCYAMT, ACCT_EOP_BAL_USDAMT, PRD_CDE, MIS_DT,CLNT_NBR FROM INT_ACCT_SNAPSHOT_D WHERE MIS_DT = CAST('20161103' AS DATE FORMAT 'YYYYMMDD');